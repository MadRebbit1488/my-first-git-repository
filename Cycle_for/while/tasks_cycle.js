//Задача №1
/* 
Задача вивести в консьль рядок " Я цьомкаю коханого ! " із масиву, проходячи цикл в зворотньому порядку, не використовуючи метод reverse.
const arr = ['!', 'коханого', 'цьомкаю', 'Я'];
Потрібно створити новий масив в якому фраза буде виведена в зворотньому порядку, потім все це об'єднати в рядок через пробіл методом join/
Потрібно написати цикл який беде проходитись по масиву в зворотньмк порядку і кожен елемент масиву з яким він буде працювати пушити в новий масив.
*/

const arr = ['!', 'коханого', 'цьомкаю', 'Я'];
const resultArray = []; //Буде отримувати елемнти по яких буде проходити цикл

for (let i = arr.length - 1; i >= 0; i-- ) {
 // 'i' має бути рівна останньому індексу
 // i >= 0 - така умова підходить тому що існує нульовий елемент масиву
 //i-- кожного разу має бути зменшення на 1
 //Цикл спочатку візьме елемент 3=>2=>1=>0 і на 0 зупиниться тому що умова вже не буде виконуватись
  resultArray.push(arr[i]);
}

console.log(resultArray.join(' ')); //Я цьомкаю коханого !
//Теж саме за допомогою reverse
//console.log(arr.reverse().join(' ')); //Я цьомкаю коханого !

___________________________________________________________________________
//Задача №2
/* 
Є  вивантажені  операції користувача
const operations = [1000, -700, 300, -500, 10000];
а також початковий баланс в 100$.
Потрібно зробити ф-цію розрахугку:
-Підсумкового балансу
-Наявність від'ємного балансу(якщо після чергової операції баланс < 0, то видавати false)
-Розрахунок середнього розходу і середнього доходу
*/

const operations = [1000, -700, 300, -500, 10000];
const startingBalance = 100;

//Ф-ція підсумкового балансу
function getBalance (arrayOfOperations, initialBalance) {//initialBalance - початковий баланс
  let balance = initialBalance;
  for (const element of arrayOfOperations) { // Тут можна використовувати константу тому що тут не відбувається переприсвоєння елементу, тут новий елемент кожного разу
    balance += element; //Баланс збільшується на значення елемента
  }
  return balance;
}

console.log(getBalance(operations, startingBalance)); //10200

function checkOperations (arrayOfOperations, initialBalance) {
  let balance = initialBalance;
  let isOk = true;
  for (const element of arrayOfOperations) {
    balance += element;
    if (balance < 0) { //Якщо після збільшення баланс < 0
      isOk = false;
      break; // Ф-ція зупиняється і цикл більше не ітерується по елеметам
    }
  }
  return isOk;
}
console.log(checkOperations(operations, startingBalance)); // true


function avarageOperations (arrayOfOperations) { // Повертаємо масив із двух середньоарифметичних чисел
  let positiveCount = 0;
  let positiveSum = 0;
  let negativeCount = 0;
  let negativeSum = 0;

  for (const element of arrayOfOperations) {
    if (element > 0) {
      //Якщо елемент > 0, то positiveCount збільшується на 1, а сума збільшується на елемент
      positiveCount ++;
      positiveSum += element;
    }
     if (element < 0) {
      negativeCount ++;
      negativeSum += element;
    }
  }
  return [positiveSum / positiveCount, negativeSum / negativeCount ];
}

console.log(avarageOperations(operations)); // (2) [3766.6666666666665, -600]
___________________________________________________________________________
//Задача №3
let i = 3;
while (i) {
    console.log(i--); //3, 2, 1
}
___________________________________________________________________________
//Задача №4
//Постфіксний варіант
let i = 0;
while (i++ < 5) console.log(i); //1, 2, 3, 4, 5
/*Перше значення i = 1:
Оператор i++ збільшує i, повертає старе значення . Для кожного значення спочатку відбувається порівняння, а потім - збільшення, а потім спрацьовує console.log. При i = 4 порівняння 4 < 5 вірно, після цього спрацює i++, і "i" збільшиться до 5 , так що значення 5 буде виведено.
 */


//Префіксний варіант
let a = 0;
while (++a < 5) console.log(a); //1, 2, 3, 4
/* Перше значення i = 1:
В префіксному варіанті спочатку відбувається збілльшення, а потім порівняння, так як ++ стоїть перед змінною. При i = 4 відбудеться збільшення i до 5, а зрівння 5 < 5 це не вірно. Тому цикл зупиниться і значення 5 не виведеться. */
___________________________________________________________________________
//Задача №5
//Постфіксна форма
for (let i = 0; i < 5; i++) console.log(i);//0, 1, 2, 3, 4

//Префіксна форма
for (let i = 0; i < 5; ++i) console.log(i); //0, 1, 2, 3, 4
/*Однаковий р-тат обумовлений алгоритмом роботи  for:
- Присвоєння виконується 1 раз
- Перевірка умови  i < 5
- Якщо true - виконується тіло циклу console.log(i) потім i++
Збільшення i++ виконується окремо від перевірки умови , значення "i" при цьому не використовується, і немає ніякої різниці між i++ і ++i
 */
___________________________________________________________________________
//Задача №6
// Вивести парні числа від 2 до 10
for (let i = 2; i <= 10; i++) {
    if (i%2!== 0) continue ;
    console.log(i);    //2, 4, 6, 8, 10   
}
//або 
for (let i = 2; i <= 10; i++) {
  if (i % 2 == 0) {
    console.log( i ); //2, 4, 6, 8, 10
  }
}
___________________________________________________________________________
//Задача №7
//Замінити for на while
for (let i = 0; i < 3; i++) {
    console.log(`number ${i}!`);//number 0!, number 1!, number 2!
}
//
let i = 0;
while (i < 3){
    console.log(`number ${i}!`); //number 0!, number 1!, number 2!
    i++;
}
___________________________________________________________________________
//Задача №8
//Повторювати цикл, поки введення не вірне
/* 
Написати цикл, який пропонує prompt ввести число більше 100. Якщо користувач введе інше число, попросити знову.
Цикл має запитувати число поки користувач не введе число більше 100, обо не натисне кнопку  Відміна (ESC).
*/
let num ;

do {
    num = prompt ('Введіть число більше 100', '');
} while (num <= 100 && num);
___________________________________________________________________________
//Задача №9