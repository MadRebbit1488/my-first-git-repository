//Перебір елементів
//Методи forEach/ FOR
______________________________________________________________________________________________________________________________________________________ 
// Метод forEach - виконує ф-цію для кожного елемента масиву
/* Синтаксис:
arr.forEach(function(item, index, array){
  //робить щось з item
}); */

let arr = ['Ваня', 'Іван', 'Оля'];

//В тілі ф-ції з аргументами можна робити що завгодно, виконувати певні дії, виводити на екран або працювати з ними
/* arr.forEach(function(item, index, array){
  console.log(`${item} знаходиться на ${index} позиції в ${array}`); 
  // Ваня знаходиться на 0 позиції в Ваня,Іван,Оля
  // Іван знаходиться на 1 позиції в Ваня,Іван,Оля
  // Оля знаходиться на 2 позиції в Ваня,Іван,Оля
});
 */

//Даний запис можна спростити за допомогою стрілкової ф-ції
arr.forEach((item, index, array) => {
   console.log(`${item} знаходиться на ${index} позиції в ${array}`);
});

//Також при використання метода forEach можна вказувати просто ім'я окремої ф-ції і все буде працювати точно так

/* arr.forEach(show);

function show (item) {
  console.log(item);
} */


___________
//Інший приклад
//Метод forEach
/* Модифікує вихідний масив, дає доступ до кожного елементу і його індексу
Дає можлвість як і в циклах пробігтися по даному масиву і зробити що завгодно з цими елементами, використати їх в яких завгодно цілях
Його аргументом вистуває ф-ція, яка викликається під капотом і виконує певну дію
При кожній ітерації параметр item буде дорівнювати одному із елементів масиву
/Це спрощена версія циклу for..of, тому що мова йде про якусь операцію на кожному з елементів даного масиву. І сам метод for..of вже вбудований, під капотом в метод forEach
Не потрібно прописувати retyrn так як він повртає undefined */

const users = [
  {
    name: 'Vitaliy',
    age: 26,
    sex: 'male',
  },
  {
    name: 'Jessica',
    age: 17,
    sex: 'female',
  },
  {
    name: 'Robert',
    age: 16,
    sex: 'male',
  },
  {
    name: 'Sara',
    age: 20,
    sex: 'female',
  },
  {

    name: 'Rob',
    age: 34,
    sex: 'male',
  },
];

//Замість створення двох окремих змінних, створюється об'єкт з даними властивостями
const count = {
  men: 0,
  women: 0,
}

//Визначаємо к-ть представників чьоловічої і жіночої статі
users.forEach(function(item, index){
//Робимо перевірку
//За доп if..else
/* if (item.sex === 'male') {
  count.men++; //Збільшуємо на 1 к-ть чол в об'єкті
}else {
  count.women++; 
}*/
//Або ?
  item.sex === 'male' ? count.men++ : count.women++; 
  
  //item.name = 'Mr ' + item.name;  

/*   console.log(item); //Аналогічний циклу for. Виводить всі записи з масиву
  console.log(index); */ //Виводить індекс кожного елементу
});

console.log(count); //Object { men: 3, women: 2 }


/* Аналогія до циклу for..of: 
for (let item of users) {
   console.log(item); // Змінна item буде одним з елементів масиву
} 
Або циклу for
for (let i =0; i < users; i++){}
*/
___________
//Виведе всі елементи масиву
[1, 2, 3].forEach(alert);


___________________________________________________________________________
//Перебір елементів 
let arr1 = ['Ваня', 'Іван', 'Оля'];
console.log(arr.length); //3

//Цикл FOR
//Можна отримати значення і ключ масиву
//Оголошуємо змінну 'і' яка рівна 0, збільшуємо кожен раз її на одиницю і в якості умови 'і' має бути менше ніж довжина масиву
for (let i = 0; i < arr1.length; i++){
  console.log(arr1[i]); // Ваня, Іван, Оля
  // Якщо потрібно вивести кожне значення масиву, потрібно звернутись до змінної якій присвоєний масив і в [] вказати змінну 'і'
}
//Ключі починаються з 0, перше значення змінної 'і' також 0, і з кожним колом ітерації воно буде збільшуватись на одиницю, поки 'і' не буде рівна length.
//На першому колі 'і' буде рівна 0, відповідно виведеться перше значення масиву. На дркгому колі = 1, друге значення масиву. На третьому колі = 2, третє значення масиву і на четвертому колі 'і' = 3 , умова не спрацює і цикл зупинить свою роботу
___________________________________________________________________________
//Перебір елементів 
//Цикл FOR...OF
//Можна використовувати тільки для виведення значень, не надає доступу до номера елементу

let arr2 = ['Ваня', 'Іван', 'Оля'];

//Оголошуємо змінну яка буде мати в собі кожне значення масиву, пишемо of і змінну яка містить в собі масив
for (let arrItem of arr2) {
  console.log(arrItem); // Ваня, Іван, Оля
  //Виводимо в консоль нову створенну змінну, таким чином ми отримуємо значення масиву
}

___________________________________________________________________________
//Цикл FOR..IN
/*Можна використовувати даний метод, але в нього є недоліки:
 -Виконує перебір всіх властивостей, а не тільки цифрових. Тобто буде виводити і так звані псевдомасиви
-Оптимізований під об'єкти і на масивах працює в 100 разів повільніше */
let array = ['Яблуко', 'Апельсин', 'Груша'];
for (let key in array) {
  console.log(array[key]); // Ябоуко, Апельсин,Груша
}
