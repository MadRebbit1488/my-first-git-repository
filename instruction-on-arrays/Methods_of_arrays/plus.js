//Array.isArray/some(fn )/every(fn ) /copyWithin/flat(depth)/flatMAp(fn)
_________
//Перевірка Array.isArray()
// Масиви не являються окремим типом даних, вони основані на об'єктах

let obj = {};
let arr = [];

console.log(typeof obj); // object
console.log(typeof arr); // object

//Щоб дізнатись де масив, а де ні існує перевірка Array.isArray()
//Синтаксис:
if (Array.isArray(arr)) {
  console.log('Це масив!');
} else {
  console.log('Це не масив!');
}
//В () вказуємо змінну якій присвоєно масив і якщо це дійсно він повернеться true,якщо ні, то повернеться false

__________________________________________________________________________________________________________

//Методи some(fn ) і every(fn )
/* Ф-ція викликається до кожного елементу масиву і перевіряє чи задовольняє задану умову хочаб один елемент . Якщо так повертає true, ні - false.
Якщо ф-ція повертає істинне значення метод some() повертає true і зупиняє перебір інших елементів. 
Якщо ф-ція повертає негативне значення метод every повертає false і також припиняє перебір елементів
Методи ведуть себе приблизно як оператори || і && . */

//Метод some 

const users6 = [
  {
    name: 'Vitaliy',
    age: 26,
    sex: 'male',
  },
  {
    name: 'Jessica',
    age: 17,
    sex: 'female',
  },
  {
    name: 'Robert',
    age: 16,
    sex: 'male',
  },
  {
    name: 'Sara',
    age: 20,
    sex: 'female',
  },
  {

    name: 'Rob',
    age: 34,
    sex: 'male',
  },
];

const foundObj1 = users6.some(function(item){
  return item.age > 18;
});

console.log(foundObj1); //true

__________________________________________________________________________________________________________

//Метод every
//Перевіряє чи кожен елемент задовольняє задану умову, якщо всі елементи задовольняють умову, повертає true, якщо хочяб один ні - false 


const users7 = [
  {
    name: 'Vitaliy',
    age: 26,
    sex: 'male',
  },
  {
    name: 'Jessica',
    age: 17,
    sex: 'female',
  },
  {
    name: 'Robert',
    age: 16,
    sex: 'male',
  },
  {
    name: 'Sara',
    age: 20,
    sex: 'female',
  },
  {

    name: 'Rob',
    age: 34,
    sex: 'male',
  },
];

const foundObj2 = users7.every(function(item){
  return item.age > 2; //true
  //return item.age > 18; false

});

console.log(foundObj2); 

//Може використовуватись для порівняння масивів
//В мене не скомпілювалось і  це поки якась дивн фігня щоб я могла її зрозуміти
function arraysEqual(arr1, arr2) {
  return arr1.length === arr2.length && arr1.every((value. index) => value === arr2[index]);
}
console.log(arraysEqual([1, 2], [1, 2]));

__________________________________________________________________________________________________________

//Метод fill(value, start, end)
//Заповнює масив повторюваними value, починаючи з індекса start  до end

__________________________________________________________________________________________________________
//Метод copyWithin(target, start, end)
//Копіює свої елементи, починаючи з позиції start і закінчуючи end, в себе, на позицію target(перезаписуючи існуючі)
__________________________________________________________________________________________________________

//Метод flat(depth)/flatMAp(fn)
//Створює новий плаский мамив із багатомірного масиву
__________________________________________________________________________________________________________

