//Методи pop/shift/splice
_________________________________________________________________________________________________________
//Видалення
const arr02 = ['1', '2', '3'];
delete arr02[1];
console.log(arr02); //Array(3) [ "1", <1 empty slot>, "3" ]
console.log(arr02[1]); // undefined
console.log(arr02.length); // 3
//При використанні метода delete, к-сть елементів масиву не зменшується , замість видаленого елементу залищається порожній слот <1 empty slot>,\

_________________________________________________________________________________________________________
const users = ['1', '2', '3'];
//
//Видалення в кінці pop
//Повертоє результат видаленого елементу, модифікує вихідний масив
const el =users.pop();
console.log(el); // 3
console.log(users); // Array [ "1", "2" ]

_________________________________________________________________________________________________________
//
//Видалення на початку shift
//Модифікує вихідний масив
const el2 = users.shift();
console.log(el2); //1
console.log(users); //Array [ "2", "3" ]

//Може одночасно додавати к-ка елементів
const num = ['3'];
num.unshift('0', '1', '2'); //Array(4) [ "0", "1", "2", "3" ]
console.log(num); // Array(6) [ "0", "1", "2", "3" ]
_________________________________________________________________________________________________________
//Метод splice
//splice - дозволяє додавати, видиляти і замінювати елементи
//Синтаксис : arr.splice(index[, deleteCount, elem1, ...elemN])
//Змінює масив з місця index, видаляє deleteCount елементів і вставляє elem1, ...elemN на їх місце. Повертає масив із видалених елементів.
const roles = ['user', 'admin', 'manager', 'superuser'];
const res7 = roles.splice(2);
console.log(res7); //Array [ "manager", "superuser" ]
//Він виводить змінений елемент як і slice, але ключова відміність в модифікації вихідного масиву, тобто він буде обрізаним
console.log(roles); //Array [ "user", "admin" ]

//Другим аргументом приймається  довжина елементів які потрібно взяти
// З другого індексу взято 2 елемента  [ "manager", "superuser" ] які вилучились із масиву
const res8 = roles.splice(2, 2);
console.log(res8); 
console.log(roles); //Array [ "user", "admin" ]

const res9= roles.splice(2, 1);
console.log(res9); //[ "manager" ]
console.log(roles); //Array [ "user", "admin" ]

//Видаляє останній елемент із масиву
const res10 = roles.splice(-1);
console.log(res10);
console.log(roles); // Array(3) [ "user", "admin", "manager" ]

//Інші приклади
//Видалляємо елемент
let arr1 = ['1', '2', '3'];
// Починаючи з першої позиції (2), видаляємо 1 елемент
arr1.splice(1, 1);
console.log(arr1); //Array [ "1", "3" ]

//Видаляємо елемент і повертаємо його в змінну
let arr2 = ['1', '2', '3'];
let remove = arr2.splice(1, 1);
console.log(remove); //Array [ "2" ]

//Замінюємо елементи
let arr3 = ['1', '2', '3'];
//Починаючи з нульової позиції (1), замінюємо один елемент
arr3.splice(0, 1, '1,5');
console.log(arr3); //Array(3) [ "1,5", "2", "3" ]

//Додаємо елемент
let arr4 = ['1', '2', '3'];
//Починаючи з першої позиції (перед 2), додаємо два елемента
// 1 - означає перед першою позицією
//0 - означає, що щось додається, без видалення об'єктів
arr4.splice(1, 0, '1,6', '1,7');
console.log(arr4); //Array(5) [ "1", "1,6", "1,7", "2", "3" ]

//Видаляємо елемент
let arr5 = ['1', '2', '3'];
//Починаючи з останньої позиції (3), видаляємо один елемнт
arr5.splice(-1, 1);
console.log(arr5); //Array [ "1", "2" ]

// Вставляє елементи без їх видалення, для цього потрібно усновити deleteCount  в 0:
let array = ['Я', 'вивчаю', 'JS'];
array.splice(2, 0 , 'складну', 'мову');
console.log(array); //Array(5) [ "Я", "вивчаю", "складну", "мову", "JS" ]

//Допускається використання негативних індексів, вони лприділяють позицію з кінця масиву
let array1 = [1, 2, 5];
//починаючи з індекса -1 (перед останнім елементом), видалити 0 елементів, потім вставити 3 і 4
array1.splice(-1, 0, 3, 4);
console.log(array1); //Array(5) [ 1, 2, 3, 4, 5 ]

_________________________________________________________________________________________________________

